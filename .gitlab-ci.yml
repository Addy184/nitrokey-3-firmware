
include:
  - project: 'nitrokey/gitlab-ci'
    file:
      - 'common-jobs/common_jobs.yml'

stages:
  - pull-github
  - build
  - test
  - deploy

variables:
  GIT_STRATEGY: clone             
  GIT_DEPTH: 0                    
  GIT_SUBMODULE_STRATEGY: recursive 
  SCRIPTS_REPO: git@git.nitrokey.com:nitrokey/gitlab-ci.git
  REPO_GROUP: nitrokey
  REPO_NAME: nitrokey-3-firmware
  MAIN_BRANCH: main 
  IMAGE_NAME: nitrokey3
  COMMON_UPDATE_DOCKER: "true"
  COMMON_UPLOAD_FILES: "false"
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  LC_ALL: C.UTF-8
  LANG: C.UTF-8

metadata:
  image: registry.git.nitrokey.com/nitrokey/nitrokey-3-firmware/nitrokey3:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
  tags:
    - docker
  stage: build
  script:
    - make commands.bd
    - make license.txt
    - make manifest.json
  after_script:
    - mkdir -p artifacts
    - cp commands.bd license.txt manifest.json artifacts
    - git archive --format zip --output artifacts/nitrokey-3-firmware.zip --prefix nitrokey-3-firmware/ HEAD
    - !reference [notify_github, script] # use notify_github from include
  artifacts:
    paths:
      - artifacts

check-firmware:
  image: registry.git.nitrokey.com/nitrokey/nitrokey-3-firmware/nitrokey3:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
  tags:
    - docker
  stage: build
  script:
    - make -C runners/embedded check-all
    - make -C runners/embedded check-all FEATURES=provisioner
    - make -C runners/embedded check-all FEATURES=test

check-usbip:
  image: registry.git.nitrokey.com/nitrokey/nitrokey-3-firmware/nitrokey3:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
  tags:
    - docker
  stage: build
  script:
    - cargo check --manifest-path runners/usbip/Cargo.toml
    - cargo check --manifest-path runners/usbip/Cargo.toml --features provisioner
    - cargo check --manifest-path runners/usbip/Cargo.toml --features test

lint:
  image: registry.git.nitrokey.com/nitrokey/nitrokey-3-firmware/nitrokey3:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  tags:
    - docker
  stage: build
  script:
    - make lint

build-nightly:
  image: registry.git.nitrokey.com/nitrokey/nitrokey-3-firmware/nitrokey3:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  tags:
    - docker
  stage: build
  parallel:
    matrix:
      - RUSTUP_TOOLCHAIN: [stable, nightly]
  script:
    - cargo --version
    - rustup target add thumbv7em-none-eabihf thumbv8m.main-none-eabi
    - make -C runners/embedded build-nk3am.bl
    - make -C runners/embedded build-nk3am.bl FEATURES=test
    - make -C runners/embedded build-nk3am.bl FEATURES=provisioner
    - make -C runners/embedded build-nk3xn
    - make -C runners/embedded build-nk3xn FEATURES=test
    - make -C runners/embedded build-nk3xn FEATURES=provisioner
    - cargo build --release --manifest-path runners/usbip/Cargo.toml
    - cargo build --release --manifest-path runners/usbip/Cargo.toml --features test
    - cargo build --release --manifest-path runners/usbip/Cargo.toml --features provisioner

build-firmware:
  image: registry.git.nitrokey.com/nitrokey/nitrokey-3-firmware/nitrokey3:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
  tags:
    - docker
  stage: build
  script:
    - git describe --exact-match
    - export VERSION=`git describe --exact-match`
    - if echo $VERSION | grep test ; then export FEATURES=test ; fi
    - mkdir -p artifacts
    - make -C runners/embedded build-nk3am.bl
    - cp runners/embedded/artifacts/runner-nrf52-bootloader-nk3am.bin.ihex artifacts/firmware-nk3am-nrf52-$VERSION.ihex
    - make -C runners/embedded build-nk3am.bl FEATURES=provisioner
    - cp runners/embedded/artifacts/runner-nrf52-bootloader-nk3am.bin.ihex artifacts/provisioner-nk3am-nrf52-$VERSION.ihex
    - make -C runners/embedded build-nk3xn
    - cp runners/embedded/artifacts/runner-lpc55-nk3xn.bin artifacts/firmware-nk3xn-lpc55-$VERSION.bin
    - make -C runners/embedded build-nk3xn FEATURES=provisioner
    - cp runners/embedded/artifacts/runner-lpc55-nk3xn.bin artifacts/provisioner-nk3xn-lpc55-$VERSION.bin
  artifacts:
    paths:
      - artifacts

build-usbip:
  image: registry.git.nitrokey.com/nitrokey/nitrokey-3-firmware/nitrokey3:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
  tags:
    - docker
  stage: build
  script:
    - git describe --exact-match
    - export VERSION=`git describe --exact-match`
    - if echo $VERSION | grep test ; then export FEATURES=test ; fi
    - mkdir -p artifacts
    - cargo build --release --manifest-path runners/usbip/Cargo.toml --features $FEATURES,
    - cp target/release/usbip-runner artifacts/usbip-runner-$VERSION
    - cargo build --release --manifest-path runners/usbip/Cargo.toml --features provisioner
    - cp target/release/usbip-runner artifacts/usbip-provisioner-$VERSION
  artifacts:
    paths:
      - artifacts

# This is a copy of build-firmware, but without the strict tag check guard and NK3AM build temporarily removed
# FIXME Either this or build-firmware should be removed
build-firmware-for-tests:
  image: registry.git.nitrokey.com/nitrokey/nitrokey-3-firmware/nitrokey3:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
  tags:
    - docker
  stage: build
  script:
    - git describe
    - export VERSION=`git describe`
    - mkdir -p artifacts
    - make -C runners/embedded build-nk3xn FEATURES=no-buttons
    - cp runners/embedded/artifacts/runner-lpc55-nk3xn.bin artifacts/firmware-nk3xn-lpc55-$VERSION.bin
    - make -C runners/embedded build-nk3xn FEATURES=provisioner,no-buttons
    - cp runners/embedded/artifacts/runner-lpc55-nk3xn.bin artifacts/provisioner-nk3xn-lpc55-$VERSION.bin
  artifacts:
    paths:
      - artifacts

###############################################################################
# test stage

test:
  image: registry.git.nitrokey.com/nitrokey/nitrokey-3-firmware/nitrokey3:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
  tags:
    - docker
  stage: test
  script:
    - cd components/apps && cargo test

hardware-tests:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
  tags:
    - nk3-hw
  parallel:
    matrix:
      - MODEL: [ nrf52, lpc55 ]
  stage: test
  script:
    - ykushcmd ykush3 -s Y3N11073 -d a
    - ykushcmd ykush3 -s Y3N11081 -d a
    - git config --global --add url."https://gitlab-ci-token:${CI_JOB_TOKEN}@git.nitrokey.com/".insteadOf "git@git.nitrokey.com:"
    - git config --global --add url."https://gitlab-ci-token:${CI_JOB_TOKEN}@git.nitrokey.com/".insteadOf "https://git.nitrokey.com/"
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@git.nitrokey.com/nitrokey/nitrokey-hardware-test.git --recursive
    - cd nitrokey-hardware-test && make ci FW=../artifacts MODEL=$MODEL && cd .. # use built firmware files
    - cp nitrokey-hardware-test/artifacts/Nitrokey3TestSuite/report-junit.xml nitrokey-hardware-test/artifacts/report-junit.xml  # the result will be merged in the future
  dependencies:
    - build-firmware-for-tests  # needs artifacts from this job only to run, don't send anything else
  needs:
    - build-firmware-for-tests  # can start immediately after this job succeeds
  artifacts:
    when: always
    paths:
      - nitrokey-hardware-test/artifacts
    reports:
      junit: nitrokey-hardware-test/artifacts/report-junit.xml

